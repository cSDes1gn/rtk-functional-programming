#lang racket
; First list manipulation sub question complete
; (define (first-question p a)
;     (define (filter-negatives p)
;         (if (null? p)
;             null
;             (if (negative? (car p))
;                 (filter-negatives (cdr p))
;                 (cons (car p) (filter-negatives (cdr p))))))
;     (append (sort (filter-negatives p) <) a))

; (first-question (list 4 -3 2 -5 1) (list 1 2))

(define (first-question p a)
    (append (sort (filter positive? p) <) a))

(first-question (list 4 -3 2 -5 1) (list 1 2))

; Second question complete
(define (gamma l1 l2)    
    (cons (foldl + 0 (map (lambda (l1 l2) (+ l1 l2)) 
        (map (lambda (n) (* n n)) l1) 
        (map (lambda (n) (* n n)) l2)))
        (map (lambda (l1 l2) (+ l1 l2)) 
        (map (lambda (n) (* n n)) l1) 
        (map (lambda (n) (* n n)) l2))))

(gamma '(1 2 3) '(4 5 6))