#!/usr/bin/racket
#lang racket

; Environment Model of Evaluation
; Substitution Model:
(define (add-one x)
    (+ x 1))

; Imperative Model:
(define (plus-one x)
    (set! var (+ var 1)) var)

(define (add-3 x) 
    (define (sum y) (+ x y)) 
    (sum 3))


; Lab 6
(define PI 3.14)
(define (area radius)
    (* PI radius radius))
(define (mess-up PI)
    (area (+ PI 5)))
(mess-up 4)

; Pt 2
(define (make-upcounter counter)
    (lambda ()
        (set! counter (+ counter 1)) counter))
(define up-count1 
    (make-upcounter 10))
(up-count1)

